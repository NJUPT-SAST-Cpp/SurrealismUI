/**
* ============================================
* @author:syf20020816@outlook.com
* @since:20231105
* @version:0.2.1
* @type:interface
* @description:
* # SFile
* SFile can help users present file selectors GUI
* ## properties
* - in property <[TabItem]> tabs : tabs will be displayed 
* - in property <TabConfigs> tab-configs : configurations of the tab
* - in-out property <[FileItem]> files : files and folders details
* - in property <ItemConfigs> item-configs : configurations of files and folders details
* ## callbacks
* - callback tab-clicked(int,TabItem) : run if you click the tab
* - callback item-clicked(int,FileItem) : run if you click a file item
* ============================================
*/
import { STable,STableColumn } from "../table/index.slint";
import { SCard } from "../card/index.slint";
import { ROOT_STYLES } from "../../themes/index.slint";
import { SText } from "../text/index.slint";
import { SIcon } from "../icon/index.slint";
import { ScrollView } from "std-widgets.slint";
import { Themes,PaddingType,UseSurrealismFn,UseIcons } from "../../use/index.slint";


export struct ItemConfigs {
  height:length,
  font-size:length,
  padding-type:PaddingType,
  theme:Themes,
  icon-size:length
}
export struct TabConfigs {
  height:length,
  font-size:length,
  padding-type:PaddingType,
  theme:Themes,
  column-width:[length]
}

export struct FileItem {
  icon:image,
  name:string,
  datetime:string,
  file-type:string,
  size:string,
}

// name : the name of the tab
// value : the real value of the tab
export struct TabItem {
  name:string,
  value:string
}

export component File inherits SCard{
  width: 100%;
  height: 100%;
  in property <[TabItem]> tabs : [
    {name:"名称",value:"name"},
    {name:"创建时间",value:"datetime"},
    {name:"文件类型",value:"type"},
    {name:"大小",value:"size"}
  ];
  in property <TabConfigs> tab-configs : {
    height:16px,
    font-size:14px,
    padding-type:PaddingType.Tip,
    theme: Themes.Light,
    column-width:[200px,100px,100px,80px]
  };
  in-out property <[FileItem]> files : [
    {icon:UseIcons.icons.Folder-filled , name : "font" , datetime : "2023-11-06" , file-type : "folder" , size : "900KB"},
    {icon:UseIcons.icons.FileCode , name : "index.slint" , datetime : "2023-11-06" , file-type : "SLINT file" , size : "3KB"},
    {icon:UseIcons.icons.FileCode , name : "LICENSE" , datetime : "2023-11-06" , file-type : "file" , size : "2KB"}
  ];
  in property <ItemConfigs> item-configs : {
    height:16px,
    font-size:12px,
    padding-type:PaddingType.Tip,
    theme: Themes.Light,
    icon-size:16px
  };
  callback tab-clicked(int,TabItem);
  callback item-clicked(int,FileItem);
  VerticalLayout {
    HorizontalLayout {
      padding-top:  UseSurrealismFn.get-padding(tab-configs.padding-type).padding-top;
      padding-bottom: UseSurrealismFn.get-padding(tab-configs.padding-type).padding-bottom;
      padding-right: UseSurrealismFn.get-padding(tab-configs.padding-type).padding-right;
      padding-left: UseSurrealismFn.get-padding(tab-configs.padding-type).padding-left;
      for t-item[t-index] in tabs: SCard{
        border-type: None;
        drop-shadow-blur: 0;
        drop-shadow-offset-x: 0;
        drop-shadow-offset-y: 0;
        card-height: tab-configs.height;
        card-width: tab-configs.column-width[t-index];
        padding-type: tab-configs.padding-type;
        theme: tab-configs.theme;
        TouchArea {
          mouse-cursor: pointer;
          clicked => {
            root.tab-clicked(t-index,t-item);
          }
        }
        VerticalLayout {
          SText {
            height: parent.height;
            text: t-item.name;
            horizontal-alignment: left;
            theme: tab-configs.theme;
            font-size: tab-configs.font-size;
          }
        }
      } 
    }
    // 滚动列表 ， 通过双层循环从横列转纵列
    ScrollView {
      viewport-height: files.length * (item-configs.height + (UseSurrealismFn.get-padding(item-configs.padding-type).padding-top * 2));
      HorizontalLayout {
        padding-top:  UseSurrealismFn.get-padding(tab-configs.padding-type).padding-top;
        padding-bottom: UseSurrealismFn.get-padding(tab-configs.padding-type).padding-bottom;
        padding-right: UseSurrealismFn.get-padding(tab-configs.padding-type).padding-right;
        padding-left: UseSurrealismFn.get-padding(tab-configs.padding-type).padding-left;
        for t-item[t-index] in tabs: SCard{
          border-type: None;
          drop-shadow-blur: 0;
          drop-shadow-offset-x: 0;
          drop-shadow-offset-y: 0;
          card-height: tab-configs.height;
          card-width: tab-configs.column-width[t-index];
          padding-type: tab-configs.padding-type;
          theme: tab-configs.theme;
          VerticalLayout {
            for f-item[f-index] in files: TouchArea {
              z: 100;
              mouse-cursor: pointer;
              clicked => {
                root.item-clicked(f-index,f-item);
              }
              VerticalLayout{
                if t-index==0: HorizontalLayout {
                  height: item-configs.height + (UseSurrealismFn.get-padding(item-configs.padding-type).padding-top * 2);
                  spacing: 6px;
                  Rectangle {
                    width: f-icon.width;
                    f-icon:=SIcon {
                      height: item-configs.icon-size;
                      width: item-configs.icon-size;
                      theme: item-configs.theme;
                      source: f-item.icon;
                    }
                  }
                  SText {
                    theme: item-configs.theme;
                    horizontal-alignment: left;
                    text: f-item.name;
                    font-size: root.item-configs.font-size;
                  }
                }
                if t-index==1: SText{
                  theme: item-configs.theme;
                  height: item-configs.height + (UseSurrealismFn.get-padding(item-configs.padding-type).padding-top * 2);
                  horizontal-alignment: left;
                  text: f-item.datetime;
                  font-size: root.item-configs.font-size;
                }
                if t-index == 2: SText{
                  theme: item-configs.theme;
                  height: item-configs.height + (UseSurrealismFn.get-padding(item-configs.padding-type).padding-top * 2);
                  horizontal-alignment: left;
                  text: f-item.file-type;
                  font-size: root.item-configs.font-size;
                }
                if t-index == 3: SText{
                  theme: item-configs.theme;
                  height: item-configs.height + (UseSurrealismFn.get-padding(item-configs.padding-type).padding-top * 2);
                  horizontal-alignment: left;
                  text: f-item.size;
                  font-size: root.item-configs.font-size;
                }
              }
            }
          }
        }
      }
    }
  }
 
}