/**
* ============================================
* @author:syf20020816@outlook.com
* @since:20230905
* @version:0.0.1
* @type:interface
* @description:
* # SURButton 
* SURButton is a button component that you can freely perform regular attribute operations on
* ## properties
* - in property <Themes> theme : Surrealism Themes
* - in property <Icons> icon : Icons.Null : do button has icon
* - in-out property <brush> font-color : button content color
* - in-out property <brush> icon-color : button icon color
* - in property <length> font-size : font size
* - in property <int> font-weight : font weight
* - in property <bool> font-italic: font italic
* - in property <string> font-family : font family
* - in property <bool> circle : set the button as a rounded button
* - private property <length> letter-spacing : content letter-spacing â›”
* - in-out property <string> content : the content of the button 
* ## functions
* ## callbacks 
* - clicked : run if you click the button
* ============================================
*/


import {SURText} from "../text/index.slint";
import {SURIcon} from "../icon/index.slint";
import {SURCard} from "../card/index.slint";
import {ROOT-STYLES,Themes,Icons} from "../../themes/index.slint";
import { HorizontalBox } from "std-widgets.slint";
export component Button inherits SURCard {
  
  card-width: layout.width;
  in property <Icons> icon : Icons.Null;
  in-out property <string> content : "SURButton";
  // animation
  animate background {
    duration: ROOT-STYLES.sur-an-duration;
    easing: ROOT-STYLES.sur-an-easing;
  }
  animate height {
    duration: ROOT-STYLES.sur-an-duration;
    easing: ROOT-STYLES.sur-an-easing;
  }
  animate width {
    duration: ROOT-STYLES.sur-an-duration;
    easing: ROOT-STYLES.sur-an-easing;
  }
  // //callbacks
  callback clicked();
  TouchArea {
    mouse-cursor: pointer;
    clicked => {
      root.clicked();
    }
    z: 10;
  }
  layout:=HorizontalLayout{
    height: root.height;
    width: txt-container.width + btn-icon.width;
    spacing: btn-icon.visible?ROOT-STYLES.get-space(self.width):0;
    icon-container:= Rectangle {
      btn-icon:= SURIcon {
        theme:root.theme;
        icon: root.icon;
        visible: root.icon==Icons.Null?false:true;
      }
    }
    txt-container:=TouchArea {
      width: btn-txt.width;
      btn-txt:=SURText{
        theme:root.theme;
        content: root.content;
      }
    }
  }
}