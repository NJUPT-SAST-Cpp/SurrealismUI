/**
* ============================================
* @author:syf20020816@outlook.com
* @since:20230907
* @version:0.0.1
* @type:interface
* @description:
* # STableColumn
* STableColumn is a component of STable, and each STableColumn forms a complete column of the table
* If it's gone, the table will become a card with a horizontal layout
* ## properties
* - in property <bool> border : add border or not
* - in property <string> name : table header name
* - in property <[string]> datas : table datas
* - in property <brush> header-background : define header background
* - in property <brush> row-background : define row background
* - in property <Themes> theme : Surrealism Themes
* - in property <length> header-height : define header height
* - in property <length> row-height : define each row height
* - in property <bool> operation-enabled: enable operation
* - in property <[{name:string,theme:Themes}]> operation : the operations you wanna do
* ## functions
* - function count() ->int : count the number of row â›”
* - pure public function get-height()->length : auto count the height of the table and return height
* ## callbacks
* - callback clicked(int,string) : run if operation-enabled is true , you will get which operation button you clicked
* ============================================
*/

import {ROOT_STYLES,DefaultSTableColumnProps} from "../../themes/index.slint";
import { SCard } from "../card/index.slint";
import { SText } from "../text/index.slint";
import { Themes,SOption,UseSurrealismFn,PaddingType } from "../../use/index.slint";


export component TableColumn inherits SCard{
    theme: DefaultSTableColumnProps.theme;
    border-type: DefaultSTableColumnProps.border-type;
    height: count-column-height();
    padding-type : DefaultSTableColumnProps.padding-type;
    font-family: DefaultSTableColumnProps.font-family;
    font-size: DefaultSTableColumnProps.font-size;
    font-weight: DefaultSTableColumnProps.font-weight;
    font-italic: DefaultSTableColumnProps.font-italic;
    in-out property <int> index : DefaultSTableColumnProps.index;
    in property <[string]> datas : DefaultSTableColumnProps.datas;
    in property <TextHorizontalAlignment> alignment : DefaultSTableColumnProps.alignment;
    pure public function count-column-height()->length {
       return datas.length * UseSurrealismFn.count-height(root.font-size,UseSurrealismFn.get-padding(root.padding-type).padding-top);
    }
    callback clicked(int,int,string);
    layout:=VerticalLayout {
        for item[i-index] in datas: TouchArea{
            mouse-cursor: pointer;
            clicked => {
                root.clicked(index,i-index,item);
            }
            SCard {
                width: root.width;
                card-height: root.font-size;
                border-type: None;
                padding-type: root.padding-type;
                theme: root.theme;
                drop-shadow-offset-x: 0;
                drop-shadow-offset-y: 0;
                drop-shadow-color: transparent;
                HorizontalLayout {
                    padding-left: parent.card-padding.padding-left;
                    padding-right: parent.card-padding.padding-right;
                    inner-text:=SText{
                        font-family: root.font-family;
                        font-weight: root.font-weight;
                        font-size: root.font-size;
                        font-italic: root.font-italic;
                        theme: root.theme;
                        height: parent.height;
                        text:item;
                        horizontal-alignment: root.alignment;
                    }
                }
            }
        }
    }
}